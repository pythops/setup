- name: Install pip
  shell: python -Im ensurepip --upgrade --user

- name: Create $HOME/.python directory
  file:
    path: $HOME/.python
    state: directory

- name: Install pip-tools package
  pip:
    name: pip-tools
    state: present
    extra_args: --user
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"

- name: Copy packages.in
  copy:
    src: python/packages.in
    dest: $HOME/.python/packages.in

- name: Generate python packages
  shell: pip-compile --upgrade $HOME/.python/packages.in --output-file $HOME/.python/packages.txt --resolver=backtracking
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"

- name: Install python packages
  pip:
    requirements: $HOME/.python/packages.txt
    state: present
    extra_args: --user
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"

#
# pdbpp
#
- name: Copy pdbpp config
  copy:
    src: python/pdbrc.py
    dest: ~/.pdbrc.py

#
# ruff
#

- name: Create ruff config dir
  file:
    path: $HOME/.config/ruff
    state: directory

- name: Copy ruff config
  copy:
    src: config/ruff/pyproject.toml
    dest: $HOME/.config/ruff/pyproject.toml
